choose(3,x) * (1/2)^x
choose(3,x) * (1/2)^x * .5^(3-x)
choose(3,x) / sum(choose(3,x))
choose(n,x) * .25^x * .75^(n-x)
n <- 3
x <- 0:3
choose(n,x) * .25^x * .75^(n-x)
choose(n,x) / sum(choose(n,x))
fx <- choose(n,x) * .25^x * .75^(n-x)
cumsum(fx)
pbinom(x,n,.25)
xi <- norm(c(-3,3),75)
xi <- norm(-3:3,75)
xi <- norm(c(-3:3),75)
xi <- rnorm(c(-3:3),75)
var(xi)
cars
dir("downloads")
setwd("C:/Users/dvdot/Downloads")
?"read.csv()"
myCars <- read.csv("all-vehicles-model.csv", header = TRUE)
View(myCars)
myCars <- read.csv("all-vehicles-model.csv", header = TRUE, sep = ";")
head(myCars)
unique(myCars)
unique(myCars$Annual.Petroleum.Consumption.For.Fuel.Type1)
unique(myCars$Annual.Petroleum.Consumption.For.Fuel.Type2)
myCars <- subset(myCars, select = -c(Annual.Petroleum.Consumption.For.Fuel.Type2,Annual.Petroleum.Consumption.For.Fuel.Type1))
dim(myCars)
names(myCars)
myCars <- read.csv("all-vehicles-model.csv", header = TRUE, sep = ";")
myCars <- subset(myCars, select = -c(Annual.Petroleum.Consumption.For.Fuel.Type2,Annual.Petroleum.Consumption.For.Fuel.Type1
Time.to.charge.at.120V, Time.to.charge.at.240V))
myCars <- subset(myCars, select = -c(Annual.Petroleum.Consumption.For.Fuel.Type2,Annual.Petroleum.Consumption.For.Fuel.Type1,
Time.to.charge.at.120V, Time.to.charge.at.240V))
unique(myCars$City.Mpg.For.Fuel.Type2)
unique(myCars$Unrounded.City.Mpg.For.Fuel.Type2)
myCars <- subset(myCars, select = -c(Annual.Petroleum.Consumption.For.Fuel.Type2,Annual.Petroleum.Consumption.For.Fuel.Type1,
Time.to.charge.at.120V, Time.to.charge.at.240V,
City.Mpg.For.Fuel.Type2, City.Mpg.For.Fuel.Type1))
unique(myCars$City.gasoline.consumption)
unique(myCars$City.electricity.consumption)
myCars <- read.csv("all-vehicles-model.csv", header = TRUE, sep = ";")
myCars <- subset(myCars, select = -c(Annual.Petroleum.Consumption.For.Fuel.Type2,Annual.Petroleum.Consumption.For.Fuel.Type1,
Time.to.charge.at.120V, Time.to.charge.at.240V,
City.Mpg.For.Fuel.Type2, City.Mpg.For.Fuel.Type1,
EPA.city.utility.factor, Co2.Fuel.Type1, Co2.Fuel.Type2,
Co2..Tailpipe.For.Fuel.Type2, Co2..Tailpipe.For.Fuel.Type1))
names(myCars)
unique(myCars$Range.For.Fuel.Type1)
unique(myCars$Range.For.Fuel.Type2)
unique(myCars$Range..HighwayFor.Fuel.Type2)
unique(myCars$Range..Highway.For.Fuel.Type2)
unique(myCars$Electric.motor)
myCars["RangeMaxEstimate"] <- which(myCars, max(Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
myCars["RangeMaxEstimate"] <- within(myCars, max(Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
within(myCars, myCars["RangeMaxEstimate"] <- max(Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
within(myCars, RangeMaxEstimate <- max(Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
myCars <- read.csv("all-vehicles-model.csv", header = TRUE, sep = ";")
within(myCars, RangeMaxEstimate <- max(Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
within(myCars, RangeMaxEstimate <- pmax(Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
myCars <- within(myCars, RangeMaxEstimate <- pmax(Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
myCars <- within(myCars, RangeMaxEstimate <- pmax(na.rm = TRUE, Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
unique(myCars$RangeMaxEstimate)
myCars <- within(myCars, PassengerSpace <- pmax(X2.door.passenger.volume, X4.door.passenger.volume, Hatchback.door.passenger.volume))
myCars <- within(myCars, PassengerSpace <- pmax(X2.door.passenger.volume, X4.door.passenger.volume, Hatchback.passenger.volume))
myCars <- within(myCars, StorageSpace <- pmax(X2.door.luggage.volume, X4.door.luggage.volume, Hatchback.luggage.volume))
myCars <- subset(myCars, select = c(Make, Model, Year, Vehicle.Size.Class, baseModel, #Car
)
)
myCars <- subset(myCars, select = c(Make, Model, Year, Vehicle.Size.Class, baseModel, #Car
PHEV.Blended, Fuel.Type1, Fuel.Type2, #FuelType
Drive, PassengerSpace, StorageSpace, Start.Stop, #Build
Cylinders, Engine.displacement, Transmission,#Engine
Unrounded.Combined.Mpg.For.Fuel.Type1, Unrounded.Combined.Mpg.For.Fuel.Type2, PHEV.Combined, #Fuel Efficiency
EPA.Fuel.Economy.Score, GHG.Score, GHG.Score.Alternative.Fuel, You.Save.Spend#Fuel Scores
))
names(myCars)
write.csv(myCars, file = "carsData.csv", row.names = FALSE, col.names = FALSE)
setwd("C:/Users/dvdot/Documents/UF local/COP3530/DSAProj3")
write.csv(myCars, file = "carsData.csv", row.names = FALSE, col.names = FALSE)
unique(myCars$Transmission)
myCars <- read.csv("all-vehicles-model.csv", header = TRUE, sep = ";")
myCars <- read.csv("all-vehicles-model.csv", header = TRUE, sep = ";")
myCars <- within(myCars, RangeMaxEstimate <- pmax(na.rm = TRUE, Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
myCars <- within(myCars, PassengerSpace <- pmax(X2.door.passenger.volume, X4.door.passenger.volume, Hatchback.passenger.volume))
myCars <- within(myCars, StorageSpace <- pmax(X2.door.luggage.volume, X4.door.luggage.volume, Hatchback.luggage.volume))
myCars <- subset(myCars, select = c(Make, Model, Year, Vehicle.Size.Class, baseModel, #Car
PHEV.Blended, Fuel.Type1, Fuel.Type2, #FuelType
Drive, PassengerSpace, StorageSpace, Start.Stop, #Build
Cylinders, Engine.displacement, Transmission,#Engine
Unrounded.Combined.Mpg.For.Fuel.Type1, Unrounded.Combined.Mpg.For.Fuel.Type2, PHEV.Combined, #Fuel Efficiency
EPA.Fuel.Economy.Score, GHG.Score, GHG.Score.Alternative.Fuel, You.Save.Spend#Fuel Scores
))
sum(myCars$PassengerSpace == 0)
sum(myCars$StorageSpace == 0)
myCars <- subset(myCars, select = c(Make, Model, Year, Vehicle.Size.Class, baseModel, #Car
PHEV.Blended, Fuel.Type1, Fuel.Type2, #FuelType
Drive, PassengerSpace, StorageSpace, Start.Stop, #Build
Cylinders, Engine.displacement, Transmission, RangeMaxEstimate,#Engine
Unrounded.Combined.Mpg.For.Fuel.Type1, Unrounded.Combined.Mpg.For.Fuel.Type2, PHEV.Combined, #Fuel Efficiency
EPA.Fuel.Economy.Score, GHG.Score, GHG.Score.Alternative.Fuel, You.Save.Spend#Fuel Scores
))
myCars <- read.csv("all-vehicles-model.csv", header = TRUE, sep = ";")
myCars <- within(myCars, RangeMaxEstimate <- pmax(na.rm = TRUE, Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
myCars <- within(myCars, PassengerSpace <- pmax(X2.door.passenger.volume, X4.door.passenger.volume, Hatchback.passenger.volume))
myCars <- within(myCars, StorageSpace <- pmax(X2.door.luggage.volume, X4.door.luggage.volume, Hatchback.luggage.volume))
myCars <- subset(myCars, select = c(Make, Model, Year, Vehicle.Size.Class, baseModel, #Car
PHEV.Blended, Fuel.Type1, Fuel.Type2, #FuelType
Drive, PassengerSpace, StorageSpace, Start.Stop, #Build
Cylinders, Engine.displacement, Transmission, RangeMaxEstimate,#Engine
Unrounded.Combined.Mpg.For.Fuel.Type1, Unrounded.Combined.Mpg.For.Fuel.Type2, PHEV.Combined, #Fuel Efficiency
EPA.Fuel.Economy.Score, GHG.Score, GHG.Score.Alternative.Fuel, You.Save.Spend#Fuel Scores
))
write.csv(myCars, file = "carsData.csv", row.names = FALSE)
unique(myCars$RangeMaxEstimate)
sum(myCars$RangeMaxEstimate == 0)
colMeans(myCars)
myCars.colMeans()
rangeMPG <- range(pmax(myCars$Unrounded.Combined.Mpg.For.Fuel.Type2, myCars$Unrounded.Combined.Mpg.For.Fuel.Type1))
rangeMPG <- range(pmax(na.rm = TRUE, myCars$Unrounded.Combined.Mpg.For.Fuel.Type2, myCars$Unrounded.Combined.Mpg.For.Fuel.Type1))
rangeMPG <- quantile(pmax(na.rm = TRUE, myCars$Unrounded.Combined.Mpg.For.Fuel.Type2, myCars$Unrounded.Combined.Mpg.For.Fuel.Type1), probs = c(0,.25,.5,.75,1))
mpgs <- c(myCars$Unrounded.Combined.Mpg.For.Fuel.Type2[myCars$Unrounded.Combined.Mpg.For.Fuel.Type2 != 0],
myCars$Unrounded.Combined.Mpg.For.Fuel.Type1[myCars$Unrounded.Combined.Mpg.For.Fuel.Type1 != 0],
myCars$PHEV.Combined[myCars$PHEV.Combined != 0])
rangeMPG <- quantile(mpgs, probs = c(0,.25,.5,.75,1))
names(myCars)
unique(myCars$Cylinders)
unique(myCars$Engine.displacement)
myCars <- read.csv("all-vehicles-model.csv", header = TRUE, sep = ";")
#myCars <- within(myCars, RangeMaxEstimate <- pmax(na.rm = TRUE, Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
myCars <- within(myCars, PassengerSpace <- pmax(X2.door.passenger.volume, X4.door.passenger.volume, Hatchback.passenger.volume))
myCars <- within(myCars, StorageSpace <- pmax(X2.door.luggage.volume, X4.door.luggage.volume, Hatchback.luggage.volume))
myCars <- subset(myCars, select = c(Make, Model, Year, Vehicle.Size.Class, baseModel, #Car
PHEV.Blended, Fuel.Type1, Fuel.Type2, #FuelType
Drive, PassengerSpace, StorageSpace, Start.Stop, #Build
Cylinders, Engine.displacement, Transmission, #old-RangeMaxEstimate, #Engine
Unrounded.Combined.Mpg.For.Fuel.Type1, Unrounded.Combined.Mpg.For.Fuel.Type2, PHEV.Combined, #Fuel Efficiency
EPA.Fuel.Economy.Score, GHG.Score, GHG.Score.Alternative.Fuel, You.Save.Spend#Fuel Scores
))
mpgs <- c(myCars$Unrounded.Combined.Mpg.For.Fuel.Type2[myCars$Unrounded.Combined.Mpg.For.Fuel.Type2 != 0],
myCars$Unrounded.Combined.Mpg.For.Fuel.Type1[myCars$Unrounded.Combined.Mpg.For.Fuel.Type1 != 0],
myCars$PHEV.Combined[myCars$PHEV.Combined != 0])
names(myCars)
unique(myCars$EPA.Fuel.Economy.Score)
myCars <- read.csv("all-vehicles-model.csv", header = TRUE, sep = ";")
#myCars <- within(myCars, RangeMaxEstimate <- pmax(na.rm = TRUE, Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
myCars <- within(myCars, PassengerSpace <- pmax(X2.door.passenger.volume, X4.door.passenger.volume, Hatchback.passenger.volume))
myCars <- within(myCars, StorageSpace <- pmax(X2.door.luggage.volume, X4.door.luggage.volume, Hatchback.luggage.volume))
myCars <- within(myCars, GHGscore <- pmax(myCars$GHG.Score,myCars$GHG.Score.Alternative.Fuel)
myCars <- within(myCars, GHGscore <- pmax(myCars$GHG.Score,myCars$GHG.Score.Alternative.Fuel))
myCars <- within(myCars, GHGscore <- pmax(myCars$GHG.Score,myCars$GHG.Score.Alternative.Fuel))
myCars <- subset(myCars, select = c(Make, Model, Year, Vehicle.Size.Class, baseModel, #Car
PHEV.Blended, Fuel.Type1, Fuel.Type2, #FuelType
Drive, PassengerSpace, StorageSpace, Start.Stop, #Build
Cylinders, Engine.displacement, Transmission, #old-RangeMaxEstimate, #Engine
Unrounded.Combined.Mpg.For.Fuel.Type1, Unrounded.Combined.Mpg.For.Fuel.Type2, PHEV.Combined, #Fuel Efficiency
EPA.Fuel.Economy.Score, GHGscore, You.Save.Spend#Fuel Scores
))
names(myCars)
minvals <- data.frame("MINVALS",NA,min(myCars$Year),NA,NA,NA,NA,NA,NA,min(myCars$PassengerSpace[myCars$PassengerSpace!=0]),min(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,min(myCars$Cylinders),min(myCars$Engine.displacement[myCars$Engine.displacement!=0]),NA,min(mpgs),NA,NA,min(myCars$EPA.Fuel.Economy.Score),min(myCars$GHGscore),min(myCars$You.Save.Spend))
View(minvals)
minvals <- data.frame("MINVALS",NA,min(myCars$Year),NA,NA,NA,NA,NA,NA,min(myCars$PassengerSpace[myCars$PassengerSpace!=0]),min(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,min(myCars$Cylinders),min(myCars$Engine.displacement[myCars$Engine.displacement!=0]),NA,min(mpgs),NA,NA,min(myCars$EPA.Fuel.Economy.Score),min(myCars$GHGscore),min(myCars$You.Save.Spend), names = names(myCars))
minvals <- data.frame("MINVALS",NA,min(myCars$Year),NA,NA,NA,NA,NA,NA,min(myCars$PassengerSpace[myCars$PassengerSpace!=0]),min(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,min(myCars$Cylinders),min(myCars$Engine.displacement[myCars$Engine.displacement!=0]),NA,min(mpgs),NA,NA,min(myCars$EPA.Fuel.Economy.Score),min(myCars$GHGscore),min(myCars$You.Save.Spend))
meanvals <- data.frame("MEANVALS",NA,mean(myCars$Year),NA,NA,NA,NA,NA,NA,mean(myCars$PassengerSpace[myCars$PassengerSpace!=0]),mean(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,mean(myCars$Cylinders),mean(myCars$Engine.displacement[myCars$Engine.displacement!=0]),NA,mean(mpgs),NA,NA,mean(myCars$EPA.Fuel.Economy.Score),mean(myCars$GHGscore),mean(myCars$You.Save.Spend))
maxvals <-data.frame("MAXVALS",NA,max(myCars$Year),NA,NA,NA,NA,NA,NA,max(myCars$PassengerSpace[myCars$PassengerSpace!=0]),max(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,max(myCars$Cylinders),max(myCars$Engine.displacement[myCars$Engine.displacement!=0]),NA,max(mpgs),NA,NA,max(myCars$EPA.Fuel.Economy.Score),max(myCars$GHGscore),max(myCars$You.Save.Spend))
rbind(myCars,minvals,meanvals,maxvals)
names(minvals) <- names(myCars)
minvals <- data.frame("MINVALS",NA,min(myCars$Year),NA,NA,NA,NA,NA,NA,min(myCars$PassengerSpace[myCars$PassengerSpace!=0]),min(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,min(myCars$Cylinders, na.rm = TRUE),min(myCars$Engine.displacement[myCars$Engine.displacement!=0]),NA,min(mpgs),NA,NA,min(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),min(myCars$GHGscore, na.rm = TRUE),min(myCars$You.Save.Spend))
meanvals <- data.frame("MEANVALS",NA,mean(myCars$Year),NA,NA,NA,NA,NA,NA,mean(myCars$PassengerSpace[myCars$PassengerSpace!=0]),mean(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,mean(myCars$Cylinders, na.rm = TRUE),mean(myCars$Engine.displacement[myCars$Engine.displacement!=0]),NA,mean(mpgs),NA,NA,mean(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),mean(myCars$GHGscore, na.rm = TRUE),mean(myCars$You.Save.Spend))
maxvals <-data.frame("MAXVALS",NA,max(myCars$Year),NA,NA,NA,NA,NA,NA,max(myCars$PassengerSpace[myCars$PassengerSpace!=0]),max(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,max(myCars$Cylinders, na.rm = TRUE),max(myCars$Engine.displacement[myCars$Engine.displacement!=0]),NA,max(mpgs),NA,NA,max(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),max(myCars$GHGscore, na.rm = TRUE),max(myCars$You.Save.Spend))
names(minvals) <- names(myCars)
minvals <- data.frame("MINVALS",NA,min(myCars$Year),NA,NA,NA,NA,NA,NA,min(myCars$PassengerSpace[myCars$PassengerSpace!=0]),min(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,min(myCars$Cylinders, na.rm = TRUE),min(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,min(mpgs),NA,NA,min(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),min(myCars$GHGscore, na.rm = TRUE),min(myCars$You.Save.Spend))
meanvals <- data.frame("MEANVALS",NA,mean(myCars$Year),NA,NA,NA,NA,NA,NA,mean(myCars$PassengerSpace[myCars$PassengerSpace!=0]),mean(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,mean(myCars$Cylinders, na.rm = TRUE),mean(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,mean(mpgs),NA,NA,mean(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),mean(myCars$GHGscore, na.rm = TRUE),mean(myCars$You.Save.Spend))
maxvals <-data.frame("MAXVALS",NA,max(myCars$Year),NA,NA,NA,NA,NA,NA,max(myCars$PassengerSpace[myCars$PassengerSpace!=0]),max(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,max(myCars$Cylinders, na.rm = TRUE),max(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,max(mpgs),NA,NA,max(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),max(myCars$GHGscore, na.rm = TRUE),max(myCars$You.Save.Spend))
names(minvals) <- names(myCars)
names(meanvals) <- names(myCars)
names(maxvals) <- names(myCars)
rbind(myCars,minvals,meanvals,maxvals)
myCars <- rbind(myCars,minvals,meanvals,maxvals)
tail(myCars)
write.csv(myCars, file = "carsData.csv", row.names = FALSE)
unique(myCars$Vehicle.Size.Class)
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Small Sport Utility Vehicle 4WD","Standard Sport Utility Vehicle 4WD","Standard Sport Utility Vehicle 2WD","Small Sport Utility Vehicle 2WD","Sport Utility Vehicle - 2WD","Sport Utility Vehicle - 4WD")] <- "Sport Utility Vehicle")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Subcompact Cars","Minicompact Cars")] <- "Compact Cars")
unique(myCars$Vehicle.Size.Class)
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Standard Pickup Trucks 2WD","Small Pickup Trucks 4WD","Standard Pickup Trucks","Small Pickup Trucks 2WD","Standard Pickup Trucks 4WD","Small Pickup Trucks","Standard Pickup Trucks/2wd")] <- "Truck")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Minivan - 2WD", "Vans","Vans, Passenger Type","Vans, Cargo Type","Minivan - 4WD","Vans Passenger")] <- "Van")
unique(myCars$Vehicle.Size.Class)
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Small Station Wagons","Midsize Station Wagons","Midsize-Large Station Wagons")] <- "Station Wagon")
unique(myCars$Vehicle.Size.Class)
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Special Purpose Vehicles","Special Purpose Vehicle 2WD","Special Purpose Vehicle 4WD","Special Purpose Vehicles/4wd","Special Purpose Vehicles/2wd")] <- "Special Purpose Vehicle")
unique(myCars$Vehicle.Size.Class)
write.csv(myCars, file = "carsData.csv", row.names = FALSE)
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Subcompact Cars","Minicompact Cars", "Compact Cars")] <- "Compact Car")
write.csv(myCars, file = "carsData.csv", row.names = FALSE)
tail(myCars)
myCars <- read.csv("all-vehicles-model.csv", header = TRUE, sep = ";")
#myCars <- within(myCars, RangeMaxEstimate <- pmax(na.rm = TRUE, Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
myCars <- within(myCars, PassengerSpace <- pmax(X2.door.passenger.volume, X4.door.passenger.volume, Hatchback.passenger.volume))
myCars <- within(myCars, StorageSpace <- pmax(X2.door.luggage.volume, X4.door.luggage.volume, Hatchback.luggage.volume))
myCars <- within(myCars, GHGscore <- pmax(myCars$GHG.Score,myCars$GHG.Score.Alternative.Fuel))
myCars <- subset(myCars, select = c(Make, Model, Year, Vehicle.Size.Class, baseModel, #Car
PHEV.Blended, Fuel.Type1, Fuel.Type2, #FuelType
Drive, PassengerSpace, StorageSpace, Start.Stop, #Build
Cylinders, Engine.displacement, Transmission, #old-RangeMaxEstimate, #Engine
Unrounded.Combined.Mpg.For.Fuel.Type1, Unrounded.Combined.Mpg.For.Fuel.Type2, PHEV.Combined, #Fuel Efficiency
EPA.Fuel.Economy.Score, GHGscore, You.Save.Spend#Fuel Scores
))
mpgs <- c(myCars$Unrounded.Combined.Mpg.For.Fuel.Type2[myCars$Unrounded.Combined.Mpg.For.Fuel.Type2 != 0],
myCars$Unrounded.Combined.Mpg.For.Fuel.Type1[myCars$Unrounded.Combined.Mpg.For.Fuel.Type1 != 0],
myCars$PHEV.Combined[myCars$PHEV.Combined != 0])
minvals <- data.frame("MINVAL",NA,min(myCars$Year),NA,NA,NA,NA,NA,NA,min(myCars$PassengerSpace[myCars$PassengerSpace!=0]),min(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,min(myCars$Cylinders, na.rm = TRUE),min(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,min(mpgs),NA,NA,min(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),min(myCars$GHGscore, na.rm = TRUE),min(myCars$You.Save.Spend))
meanvals <- data.frame("MEANVAL",NA,mean(myCars$Year),NA,NA,NA,NA,NA,NA,mean(myCars$PassengerSpace[myCars$PassengerSpace!=0]),mean(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,mean(myCars$Cylinders, na.rm = TRUE),mean(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,mean(mpgs),NA,NA,mean(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),mean(myCars$GHGscore, na.rm = TRUE),mean(myCars$You.Save.Spend))
maxvals <-data.frame("MAXVAL",NA,max(myCars$Year),NA,NA,NA,NA,NA,NA,max(myCars$PassengerSpace[myCars$PassengerSpace!=0]),max(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,max(myCars$Cylinders, na.rm = TRUE),max(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,max(mpgs),NA,NA,max(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),max(myCars$GHGscore, na.rm = TRUE),max(myCars$You.Save.Spend))
names(minvals) <- names(myCars)
names(meanvals) <- names(myCars)
names(maxvals) <- names(myCars)
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Subcompact Cars","Minicompact Cars", "Compact Cars")] <- "Compact Car")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Small Sport Utility Vehicle 4WD","Standard Sport Utility Vehicle 4WD","Standard Sport Utility Vehicle 2WD","Small Sport Utility Vehicle 2WD","Sport Utility Vehicle - 2WD","Sport Utility Vehicle - 4WD")] <- "Sport Utility Vehicle")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Standard Pickup Trucks 2WD","Small Pickup Trucks 4WD","Standard Pickup Trucks","Small Pickup Trucks 2WD","Standard Pickup Trucks 4WD","Small Pickup Trucks","Standard Pickup Trucks/2wd")] <- "Truck")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Minivan - 2WD", "Vans","Vans, Passenger Type","Vans, Cargo Type","Minivan - 4WD","Vans Passenger")] <- "Van")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Special Purpose Vehicles","Special Purpose Vehicle 2WD","Special Purpose Vehicle 4WD","Special Purpose Vehicles/4wd","Special Purpose Vehicles/2wd")] <- "Special Purpose Vehicle")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Small Station Wagons","Midsize Station Wagons","Midsize-Large Station Wagons")] <- "Station Wagon")
myCars <- rbind(myCars,minvals,meanvals,maxvals)
write.csv(myCars, file = "carsData.csv", row.names = FALSE, quote = FALSE)
tail(myCars)
unique(myCars$PHEV.Blended)
unique(myCars$Drive)
myCars <- within(myCars, Drive[Drive == ""] <- NA)
unique(myCars$Drive)
myCars[myCars$Drive == "2-Wheel Drive"]
myCars[myCars$Drive = "2-Wheel Drive"]
myCars[myCars$Drive == "2-Wheel Drive"]
head(myCars[myCars$Drive == "2-Wheel Drive"])
myCars$Drive == "2-Wheel Drive"
sum(myCars$Drive == "2-Wheel Drive")
unique(myCars$Drive)
unique(myCars$Drive == "2-Wheel Drive")
sum(myCars$Drive == "2-Wheel Drive", na.rm = TRUE)
myCars$Drive == "2-Wheel Drive"
myCars[myCars$Drive == "2-Wheel Drive",]
myCars <- within(myCars, Drive[Drive == "2-Wheel Drive"] <- "Rear-Wheel Drive")
unique(myCars$Drive)
unique(myCars$Vehicle.Size.Class)
write.csv(myCars, file = "carsData.csv", row.names = FALSE, quote = FALSE)
unique(myCars$Start.Stop)
unique(myCars$PassengerSpace)
sum(myCars$PassengerSpace == 0)
unique(myCars$StorageSpace)
unique(myCars$Cylinders)
sum(myCars$Cylinders == 0)
sum(myCars$Cylinders == NA)
sum(myCars$Cylinders == NA,na.rm = FALSE)
is.na(myCars$Cylinders)
sum(is.na(myCars$Cylinders))
unique(myCars$Engine.displacement)
sum(is.na(myCars$Engine.displacement))
myCars <- within(myCars, Cylinders[is.na(Cylinders)] <- 0)
myCars <- within(myCars, Engine.displacement[is.na(Engine.displacement)] <- 0)
unique(myCars$Engine.displacement)
unique(myCars$Cylinders)
unique(myCars$PassengerSpace)
sum(is.na(myCars$PassengerSpace))
sum(is.na(myCars$Unrounded.Combined.Mpg.For.Fuel.Type1))
sum(is.na(myCars$Unrounded.Combined.Mpg.For.Fuel.Type2))
head(myCars[myCars$PHEV.Blended == "true"])
head(myCars[myCars$PHEV.Blended == "true",])
head(myCars[myCars$Fuel.Type1 == "Electric",])
unique(myCars$Fuel.Type1)
head(myCars[myCars$Fuel.Type1 == "Electricity",])
head(myCars[myCars$Fuel.Type1 == "Electricity" && !is.na(myCars$Fuel.Type2),])
head(myCars[myCars$Fuel.Type1 == "Electricity" & !is.na(myCars$Fuel.Type2),])
sum(myCars$Fuel.Type1 == "Electricity" & !is.na(myCars$Fuel.Type2))
sum(myCars$Fuel.Type1 == "Electricity")
sum(myCars$Fuel.Type1 == "Electricity",na.rm = TRUE)
unique(myCars$Fuel.Type1)
unique(myCars$Fuel.Type2)
myCars <- within(myCars, Fuel.Type2[Fuel.Type2 == ""] <- NA)
sum(myCars$Fuel.Type1 == "Electricity" & !is.na(myCars$Fuel.Type2))
unique(myCars$PHEV.Combined)
sum(myCars$PHEV.Blended == "false" & myCars$PHEV.Combined > 0)
sum(myCars$PHEV.Blended == "false" & myCars$PHEV.Combined > 0,na.rm = TRUE)
sum(myCars$Fuel.Type2 == "Electricity" & myCars$PHEV.Combined > 0)
sum(myCars$Fuel.Type2 == "Electricity" & myCars$PHEV.Combined > 0,na.rm = TRUE)
unique(myCars$PHEV.Blended)
write.csv(myCars, file = "carsData.csv", row.names = FALSE, quote = FALSE)
unique(myCars$Make)
unique(myCars$Model)
grepl('X7',myCars$Model)
sum(grepl('X7',myCars$Model))
sum(grepl(',',myCars$Model))
within(myCars, Modelgrepl(',',Model))
within(myCars, Model[grepl(',',Model)])
within(myCars, Model[grepl(',',Model),])
within(myCars$Model[grepl(',',myCars$Model),])
myCars$Model[grepl(',',myCars$Model)]
within(myCars, Model <- gsub(',','',Model))
myCars <- within(myCars, Model <- gsub(',','',Model))
myCars$Model[grepl(',',myCars$Model)]
myCars$Model[grepl(',',myCars$Make)]
myCars <- read.csv("all-vehicles-model.csv", header = TRUE, sep = ";")
#myCars <- within(myCars, RangeMaxEstimate <- pmax(na.rm = TRUE, Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
myCars <- within(myCars, PassengerSpace <- pmax(X2.door.passenger.volume, X4.door.passenger.volume, Hatchback.passenger.volume))
myCars <- within(myCars, StorageSpace <- pmax(X2.door.luggage.volume, X4.door.luggage.volume, Hatchback.luggage.volume))
myCars <- within(myCars, GHGscore <- pmax(myCars$GHG.Score,myCars$GHG.Score.Alternative.Fuel))
myCars <- subset(myCars, select = c(Make, Model, Year, Vehicle.Size.Class, baseModel, #Car
PHEV.Blended, Fuel.Type1, Fuel.Type2, #FuelType
Drive, PassengerSpace, StorageSpace, Start.Stop, #Build
Cylinders, Engine.displacement, Transmission, #old-RangeMaxEstimate, #Engine
Unrounded.Combined.Mpg.For.Fuel.Type1, Unrounded.Combined.Mpg.For.Fuel.Type2, PHEV.Combined, #Fuel Efficiency
EPA.Fuel.Economy.Score, GHGscore, You.Save.Spend#Fuel Scores
))
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Subcompact Cars","Minicompact Cars", "Compact Cars")] <- "Compact Car")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Small Sport Utility Vehicle 4WD","Standard Sport Utility Vehicle 4WD","Standard Sport Utility Vehicle 2WD","Small Sport Utility Vehicle 2WD","Sport Utility Vehicle - 2WD","Sport Utility Vehicle - 4WD")] <- "Sport Utility Vehicle")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Standard Pickup Trucks 2WD","Small Pickup Trucks 4WD","Standard Pickup Trucks","Small Pickup Trucks 2WD","Standard Pickup Trucks 4WD","Small Pickup Trucks","Standard Pickup Trucks/2wd")] <- "Truck")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Minivan - 2WD", "Vans","Vans, Passenger Type","Vans, Cargo Type","Minivan - 4WD","Vans Passenger")] <- "Van")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Special Purpose Vehicles","Special Purpose Vehicle 2WD","Special Purpose Vehicle 4WD","Special Purpose Vehicles/4wd","Special Purpose Vehicles/2wd")] <- "Special Purpose Vehicle")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Small Station Wagons","Midsize Station Wagons","Midsize-Large Station Wagons")] <- "Station Wagon")
myCars <- within(myCars, Drive[Drive == ""] <- NA)
myCars <- within(myCars, Drive[Drive == "2-Wheel Drive"] <- "Rear-Wheel Drive")
myCars <- within(myCars, Start.Stop[Start.Stop == ""] <- NA)
myCars <- within(myCars, Cylinders[is.na(Cylinders)] <- 0)
myCars <- within(myCars, Engine.displacement[is.na(Engine.displacement)] <- 0)
myCars <- within(myCars, Unrounded.Combined.Mpg.For.Fuel.Type2[is.na(Unrounded.Combined.Mpg.For.Fuel.Type2)] <- 0)
myCars <- within(myCars, Fuel.Type2[Fuel.Type2 == ""] <- NA)
myCars$Model[grepl(',',myCars$Make)]
myCars$Model[grepl(',',myCars$Model)]
myCars <- within(myCars, Model <- gsub(',','',Model))
myCars$Model[grepl(',',myCars$Model)]
mpgs <- c(myCars$Unrounded.Combined.Mpg.For.Fuel.Type2[myCars$Unrounded.Combined.Mpg.For.Fuel.Type2 != 0],
myCars$Unrounded.Combined.Mpg.For.Fuel.Type1[myCars$Unrounded.Combined.Mpg.For.Fuel.Type1 != 0],
myCars$PHEV.Combined[myCars$PHEV.Combined != 0])
minvals <- data.frame("MINVAL",NA,min(myCars$Year),NA,NA,NA,NA,NA,NA,min(myCars$PassengerSpace[myCars$PassengerSpace!=0]),min(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,min(myCars$Cylinders, na.rm = TRUE),min(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,min(mpgs),NA,NA,min(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),min(myCars$GHGscore, na.rm = TRUE),min(myCars$You.Save.Spend))
meanvals <- data.frame("MEANVAL",NA,mean(myCars$Year),NA,NA,NA,NA,NA,NA,mean(myCars$PassengerSpace[myCars$PassengerSpace!=0]),mean(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,mean(myCars$Cylinders, na.rm = TRUE),mean(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,mean(mpgs),NA,NA,mean(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),mean(myCars$GHGscore, na.rm = TRUE),mean(myCars$You.Save.Spend))
maxvals <-data.frame("MAXVAL",NA,max(myCars$Year),NA,NA,NA,NA,NA,NA,max(myCars$PassengerSpace[myCars$PassengerSpace!=0]),max(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,max(myCars$Cylinders, na.rm = TRUE),max(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,max(mpgs),NA,NA,max(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),max(myCars$GHGscore, na.rm = TRUE),max(myCars$You.Save.Spend))
names(minvals) <- names(myCars)
names(meanvals) <- names(myCars)
names(maxvals) <- names(myCars)
myCars <- rbind(myCars,minvals,meanvals,maxvals)
myCars$Make[grepl(',',myCars$Make)]
myCars <- within(myCars, Make <- gsub(',','',Make))
myCars$Make[grepl(',',myCars$Make)]
myCars$baseModel[grepl(',',myCars$Make)]
myCars$baseModel[grepl(',',myCars$baseModel)]
unique(myCars$Transmission)
myCars <- read.csv("all-vehicles-model.csv", header = TRUE, sep = ";")
#myCars <- within(myCars, RangeMaxEstimate <- pmax(na.rm = TRUE, Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
myCars <- within(myCars, PassengerSpace <- pmax(X2.door.passenger.volume, X4.door.passenger.volume, Hatchback.passenger.volume))
myCars <- within(myCars, StorageSpace <- pmax(X2.door.luggage.volume, X4.door.luggage.volume, Hatchback.luggage.volume))
myCars <- within(myCars, GHGscore <- pmax(myCars$GHG.Score,myCars$GHG.Score.Alternative.Fuel))
myCars <- subset(myCars, select = c(Make, Model, Year, Vehicle.Size.Class, baseModel, #Car
PHEV.Blended, Fuel.Type1, Fuel.Type2, #FuelType
Drive, PassengerSpace, StorageSpace, Start.Stop, #Build
Cylinders, Engine.displacement, Transmission, #old-RangeMaxEstimate, #Engine
Unrounded.Combined.Mpg.For.Fuel.Type1, Unrounded.Combined.Mpg.For.Fuel.Type2, PHEV.Combined, #Fuel Efficiency
EPA.Fuel.Economy.Score, GHGscore, You.Save.Spend#Fuel Scores
))
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Subcompact Cars","Minicompact Cars", "Compact Cars")] <- "Compact Car")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Small Sport Utility Vehicle 4WD","Standard Sport Utility Vehicle 4WD","Standard Sport Utility Vehicle 2WD","Small Sport Utility Vehicle 2WD","Sport Utility Vehicle - 2WD","Sport Utility Vehicle - 4WD")] <- "Sport Utility Vehicle")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Standard Pickup Trucks 2WD","Small Pickup Trucks 4WD","Standard Pickup Trucks","Small Pickup Trucks 2WD","Standard Pickup Trucks 4WD","Small Pickup Trucks","Standard Pickup Trucks/2wd")] <- "Truck")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Minivan - 2WD", "Vans","Vans, Passenger Type","Vans, Cargo Type","Minivan - 4WD","Vans Passenger")] <- "Van")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Special Purpose Vehicles","Special Purpose Vehicle 2WD","Special Purpose Vehicle 4WD","Special Purpose Vehicles/4wd","Special Purpose Vehicles/2wd")] <- "Special Purpose Vehicle")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Small Station Wagons","Midsize Station Wagons","Midsize-Large Station Wagons")] <- "Station Wagon")
myCars <- within(myCars, Drive[Drive == ""] <- NA)
myCars <- within(myCars, Drive[Drive == "2-Wheel Drive"] <- "Rear-Wheel Drive")
myCars <- within(myCars, Start.Stop[Start.Stop == ""] <- NA)
myCars <- within(myCars, Cylinders[is.na(Cylinders)] <- 0)
myCars <- within(myCars, Engine.displacement[is.na(Engine.displacement)] <- 0)
myCars <- within(myCars, Unrounded.Combined.Mpg.For.Fuel.Type2[is.na(Unrounded.Combined.Mpg.For.Fuel.Type2)] <- 0)
myCars <- within(myCars, Fuel.Type2[Fuel.Type2 == ""] <- NA)
myCars <- within(myCars, Model <- gsub(',','',Model))
myCars <- within(myCars, Make <- gsub(',','',Make))
mpgs <- c(myCars$Unrounded.Combined.Mpg.For.Fuel.Type2[myCars$Unrounded.Combined.Mpg.For.Fuel.Type2 != 0],
myCars$Unrounded.Combined.Mpg.For.Fuel.Type1[myCars$Unrounded.Combined.Mpg.For.Fuel.Type1 != 0],
myCars$PHEV.Combined[myCars$PHEV.Combined != 0])
minvals <- data.frame("MINVAL",NA,min(myCars$Year),NA,NA,NA,NA,NA,NA,min(myCars$PassengerSpace[myCars$PassengerSpace!=0]),min(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,min(myCars$Cylinders, na.rm = TRUE),min(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,min(mpgs),NA,NA,min(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),min(myCars$GHGscore, na.rm = TRUE),min(myCars$You.Save.Spend))
meanvals <- data.frame("MEANVAL",NA,mean(myCars$Year),NA,NA,NA,NA,NA,NA,mean(myCars$PassengerSpace[myCars$PassengerSpace!=0]),mean(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,mean(myCars$Cylinders, na.rm = TRUE),mean(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,mean(mpgs),NA,NA,mean(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),mean(myCars$GHGscore, na.rm = TRUE),mean(myCars$You.Save.Spend))
maxvals <-data.frame("MAXVAL",NA,max(myCars$Year),NA,NA,NA,NA,NA,NA,max(myCars$PassengerSpace[myCars$PassengerSpace!=0]),max(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,max(myCars$Cylinders, na.rm = TRUE),max(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,max(mpgs),NA,NA,max(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),max(myCars$GHGscore, na.rm = TRUE),max(myCars$You.Save.Spend))
names(minvals) <- names(myCars)
names(meanvals) <- names(myCars)
names(maxvals) <- names(myCars)
myCars <- rbind(myCars,minvals,meanvals,maxvals)
write.csv(myCars, file = "carsData.csv", row.names = FALSE, quote = FALSE)
sum(myCars$Fuel.Type2 == "Electricity" & myCars$PHEV.Combined > 0,na.rm = TRUE)
sum(myCars$PHEV.Blended == "true",na.rm = TRUE)
sum(myCars$Fuel.Type2 == "Electricity",na.rm = TRUE)
sum(myCars$PHEV.Combined > 0,na.rm = TRUE)
sum(myCars$PHEV.Blended == "true",na.rm = TRUE)
unique(myCars$PHEV.Combined)
myCars <- within(myCars, PHEV.Combined[is.na(PHEV.Combined)] <- 0)
unique(myCars$PHEV.Combined)
unique(myCars$GHGscore)
sum(is.na(myCars$GHGscore))
sum(is.na(myCars$EPA.Fuel.Economy.Score))
myCars <- read.csv("all-vehicles-model.csv", header = TRUE, sep = ";")
#myCars <- within(myCars, RangeMaxEstimate <- pmax(na.rm = TRUE, Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
myCars <- within(myCars, PassengerSpace <- pmax(na.rm = TRUE, X2.door.passenger.volume, X4.door.passenger.volume, Hatchback.passenger.volume))
myCars <- within(myCars, StorageSpace <- pmax(na.rm = TRUE, X2.door.luggage.volume, X4.door.luggage.volume, Hatchback.luggage.volume))
myCars <- within(myCars, GHGscore <- pmax(na.rm = TRUE, myCars$GHG.Score,myCars$GHG.Score.Alternative.Fuel))
myCars <- subset(myCars, select = c(Make, Model, Year, Vehicle.Size.Class, baseModel, #Car
PHEV.Blended, Fuel.Type1, Fuel.Type2, #FuelType
Drive, PassengerSpace, StorageSpace, Start.Stop, #Build
Cylinders, Engine.displacement, Transmission, #old-RangeMaxEstimate, #Engine
Unrounded.Combined.Mpg.For.Fuel.Type1, Unrounded.Combined.Mpg.For.Fuel.Type2, PHEV.Combined, #Fuel Efficiency
EPA.Fuel.Economy.Score, GHGscore, You.Save.Spend#Fuel Scores
))
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Subcompact Cars","Minicompact Cars", "Compact Cars")] <- "Compact Car")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Small Sport Utility Vehicle 4WD","Standard Sport Utility Vehicle 4WD","Standard Sport Utility Vehicle 2WD","Small Sport Utility Vehicle 2WD","Sport Utility Vehicle - 2WD","Sport Utility Vehicle - 4WD")] <- "Sport Utility Vehicle")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Standard Pickup Trucks 2WD","Small Pickup Trucks 4WD","Standard Pickup Trucks","Small Pickup Trucks 2WD","Standard Pickup Trucks 4WD","Small Pickup Trucks","Standard Pickup Trucks/2wd")] <- "Truck")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Minivan - 2WD", "Vans","Vans, Passenger Type","Vans, Cargo Type","Minivan - 4WD","Vans Passenger")] <- "Van")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Special Purpose Vehicles","Special Purpose Vehicle 2WD","Special Purpose Vehicle 4WD","Special Purpose Vehicles/4wd","Special Purpose Vehicles/2wd")] <- "Special Purpose Vehicle")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Small Station Wagons","Midsize Station Wagons","Midsize-Large Station Wagons")] <- "Station Wagon")
myCars <- within(myCars, Drive[Drive == ""] <- NA)
myCars <- within(myCars, Drive[Drive == "2-Wheel Drive"] <- "Rear-Wheel Drive")
myCars <- within(myCars, Start.Stop[Start.Stop == ""] <- NA)
myCars <- within(myCars, Cylinders[is.na(Cylinders)] <- 0)
myCars <- within(myCars, PHEV.Combined[is.na(PHEV.Combined)] <- 0)
myCars <- within(myCars, Engine.displacement[is.na(Engine.displacement)] <- 0)
myCars <- within(myCars, Unrounded.Combined.Mpg.For.Fuel.Type2[is.na(Unrounded.Combined.Mpg.For.Fuel.Type2)] <- 0)
myCars <- within(myCars, Fuel.Type2[Fuel.Type2 == ""] <- NA)
myCars <- within(myCars, Model <- gsub(',','',Model))
myCars <- within(myCars, Make <- gsub(',','',Make))
mpgs <- c(myCars$Unrounded.Combined.Mpg.For.Fuel.Type2[myCars$Unrounded.Combined.Mpg.For.Fuel.Type2 != 0],
myCars$Unrounded.Combined.Mpg.For.Fuel.Type1[myCars$Unrounded.Combined.Mpg.For.Fuel.Type1 != 0],
myCars$PHEV.Combined[myCars$PHEV.Combined != 0])
minvals <- data.frame("MINVAL",NA,min(myCars$Year),NA,NA,NA,NA,NA,NA,min(myCars$PassengerSpace[myCars$PassengerSpace!=0]),min(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,min(myCars$Cylinders, na.rm = TRUE),min(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,min(mpgs),NA,NA,min(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),min(myCars$GHGscore, na.rm = TRUE),min(myCars$You.Save.Spend))
meanvals <- data.frame("MEANVAL",NA,mean(myCars$Year),NA,NA,NA,NA,NA,NA,mean(myCars$PassengerSpace[myCars$PassengerSpace!=0]),mean(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,mean(myCars$Cylinders, na.rm = TRUE),mean(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,mean(mpgs),NA,NA,mean(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),mean(myCars$GHGscore, na.rm = TRUE),mean(myCars$You.Save.Spend))
maxvals <-data.frame("MAXVAL",NA,max(myCars$Year),NA,NA,NA,NA,NA,NA,max(myCars$PassengerSpace[myCars$PassengerSpace!=0]),max(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,max(myCars$Cylinders, na.rm = TRUE),max(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,max(mpgs),NA,NA,max(myCars$EPA.Fuel.Economy.Score, na.rm = TRUE),max(myCars$GHGscore, na.rm = TRUE),max(myCars$You.Save.Spend))
names(minvals) <- names(myCars)
names(meanvals) <- names(myCars)
names(maxvals) <- names(myCars)
myCars <- rbind(myCars,minvals,meanvals,maxvals)
sum(is.na(myCars$GHGscore))
sum(is.na(myCars$EPA.Fuel.Economy.Score))
sum(is.na(myCars$StorageSpace))
sum(myCars$StorageSpace == 0)
unique(myCars$GHGscore)
unique(myCars$EPA.Fuel.Economy.Score)
myCars <- within(myCars, EPA.Fuel.Economy.Score[is.na(EPA.Fuel.Economy.Score)] <- -1)
myCars <- within(myCars, GHGscore[is.na(GHGscore)] <- -1)
sum(myCars$Cylinders == 0)
sum(myCars$Engine.displacement == 0)
unique(myCars$Transmission)
sum(myCars$Transmission == "")
sum(myCars$Transmission == "", na.rm = TRUE)
myCars <- within(myCars, Transmission[Transmission == ""] <- NA)
sum(myCars$Transmission == "", na.rm = TRUE)
unique(myCars$Transmission)
sum(is.na(myCars$Transmission))
myCars[is.na(myCars$Transmission),]
source("C:/Users/dvdot/Documents/UF local/COP3530/DSAProj3/dataEditing.R", echo=TRUE)
unique(myCars$Transmission)
tail(myCars, 3)
myCars[myCars$PassengerSpace==1]
myCars[myCars$PassengerSpace==1,]
sum(is.na(myCars$You.Save.Spend))
max(myCars$Unrounded.Combined.Mpg.For.Fuel.Type2)
sum(is.na(myCars$Unrounded.Combined.Mpg.For.Fuel.Type2))
myCars[is.na(myCars$Unrounded.Combined.Mpg.For.Fuel.Type2),]
max(myCars$Unrounded.Combined.Mpg.For.Fuel.Type2, na.rm = TRUE)
max(myCars$Unrounded.Combined.Mpg.For.Fuel.Type1, na.rm = TRUE)
max(myCars$PHEV.Combined, na.rm = TRUE)
max(myCars$Unrounded.Combined.Mpg.For.Fuel.Type1[myCars$Unrounded.Combined.Mpg.For.Fuel.Type1 != 0 && myCars$Fuel.Type1 != "Electricity"], na.rm = TRUE)
max(myCars$Unrounded.Combined.Mpg.For.Fuel.Type1[myCars$Unrounded.Combined.Mpg.For.Fuel.Type1 != 0 & myCars$Fuel.Type1 != "Electricity"], na.rm = TRUE)
max(myCars$Unrounded.Combined.Mpg.For.Fuel.Type2], na.rm = TRUE)
max(myCars$Unrounded.Combined.Mpg.For.Fuel.Type2, na.rm = TRUE)
max(myCars$Unrounded.Combined.Mpg.For.Fuel.Type2[myCars$Unrounded.Combined.Mpg.For.Fuel.Type2 != 0 & myCars$Fuel.Type2 != "Electricity"], na.rm = TRUE)
myCars <- read.csv("all-vehicles-model.csv", header = TRUE, sep = ";")
#myCars <- within(myCars, RangeMaxEstimate <- pmax(na.rm = TRUE, Range.For.Fuel.Type1, Range..City.For.Fuel.Type1, Range..City.For.Fuel.Type2, Range..Highway.For.Fuel.Type1, Range..Highway.For.Fuel.Type2, Epa.Range.For.Fuel.Type2))
myCars <- within(myCars, PassengerSpace <- pmax(na.rm = TRUE, X2.door.passenger.volume, X4.door.passenger.volume, Hatchback.passenger.volume))
myCars <- within(myCars, StorageSpace <- pmax(na.rm = TRUE, X2.door.luggage.volume, X4.door.luggage.volume, Hatchback.luggage.volume))
myCars <- within(myCars, GHGscore <- pmax(na.rm = TRUE, myCars$GHG.Score,myCars$GHG.Score.Alternative.Fuel))
myCars <- subset(myCars, select = c(Make, Model, Year, Vehicle.Size.Class, baseModel, #Car
PHEV.Blended, Fuel.Type1, Fuel.Type2, #FuelType
Drive, PassengerSpace, StorageSpace, Start.Stop, #Build
Cylinders, Engine.displacement, Transmission, #old-RangeMaxEstimate, #Engine
Unrounded.Combined.Mpg.For.Fuel.Type1, Unrounded.Combined.Mpg.For.Fuel.Type2, PHEV.Combined, #Fuel Efficiency
EPA.Fuel.Economy.Score, GHGscore, You.Save.Spend#Fuel Scores
))
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Subcompact Cars","Minicompact Cars", "Compact Cars")] <- "Compact Car")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Small Sport Utility Vehicle 4WD","Standard Sport Utility Vehicle 4WD","Standard Sport Utility Vehicle 2WD","Small Sport Utility Vehicle 2WD","Sport Utility Vehicle - 2WD","Sport Utility Vehicle - 4WD")] <- "Sport Utility Vehicle")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Standard Pickup Trucks 2WD","Small Pickup Trucks 4WD","Standard Pickup Trucks","Small Pickup Trucks 2WD","Standard Pickup Trucks 4WD","Small Pickup Trucks","Standard Pickup Trucks/2wd")] <- "Truck")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Minivan - 2WD", "Vans","Vans, Passenger Type","Vans, Cargo Type","Minivan - 4WD","Vans Passenger")] <- "Van")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Special Purpose Vehicles","Special Purpose Vehicle 2WD","Special Purpose Vehicle 4WD","Special Purpose Vehicles/4wd","Special Purpose Vehicles/2wd")] <- "Special Purpose Vehicle")
myCars <- within(myCars, Vehicle.Size.Class[Vehicle.Size.Class %in% c("Small Station Wagons","Midsize Station Wagons","Midsize-Large Station Wagons")] <- "Station Wagon")
myCars <- within(myCars, Drive[Drive == ""] <- NA)
myCars <- within(myCars, Drive[Drive == "2-Wheel Drive"] <- "Rear-Wheel Drive")
myCars <- within(myCars, Start.Stop[Start.Stop == ""] <- NA)
myCars <- within(myCars, Cylinders[is.na(Cylinders)] <- 0)
myCars <- within(myCars, EPA.Fuel.Economy.Score[is.na(EPA.Fuel.Economy.Score)] <- -1)
myCars <- within(myCars, GHGscore[is.na(GHGscore)] <- -1)
myCars <- within(myCars, PHEV.Combined[is.na(PHEV.Combined)] <- 0)
myCars <- within(myCars, Engine.displacement[is.na(Engine.displacement)] <- 0)
myCars <- within(myCars, Unrounded.Combined.Mpg.For.Fuel.Type2[is.na(Unrounded.Combined.Mpg.For.Fuel.Type2)] <- 0)
myCars <- within(myCars, Fuel.Type2[Fuel.Type2 == ""] <- NA)
myCars <- within(myCars, Transmission[Transmission == ""] <- "Automatic (S6)")
myCars <- within(myCars, Model <- gsub(',','',Model))
myCars <- within(myCars, Make <- gsub(',','',Make))
mpgs <- c(myCars$Unrounded.Combined.Mpg.For.Fuel.Type2[myCars$Unrounded.Combined.Mpg.For.Fuel.Type2 != 0],
myCars$Unrounded.Combined.Mpg.For.Fuel.Type1[myCars$Unrounded.Combined.Mpg.For.Fuel.Type1 != 0 & myCars$Fuel.Type1 != "Electricity"],
myCars$PHEV.Combined[myCars$PHEV.Combined != 0])
minvals <- data.frame("MINVAL",NA,min(myCars$Year),NA,NA,NA,NA,NA,NA,min(myCars$PassengerSpace[myCars$PassengerSpace!=0]),min(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,min(myCars$Cylinders[myCars$Cylinders!=0], na.rm = TRUE),min(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,min(mpgs),NA,NA,min(myCars$EPA.Fuel.Economy.Score[myCars$EPA.Fuel.Economy.Score!=-1], na.rm = TRUE),min(myCars$GHGscore[myCars$GHGscore!=-1], na.rm = TRUE),min(myCars$You.Save.Spend))
meanvals <- data.frame("MEANVAL",NA,mean(myCars$Year),NA,NA,NA,NA,NA,NA,mean(myCars$PassengerSpace[myCars$PassengerSpace!=0]),mean(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,mean(myCars$Cylinders[myCars$Cylinders!=0], na.rm = TRUE),mean(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,mean(mpgs),NA,NA,mean(myCars$EPA.Fuel.Economy.Score[myCars$EPA.Fuel.Economy.Score!=-1], na.rm = TRUE),mean(myCars$GHGscore[myCars$GHGscore!=-1], na.rm = TRUE),mean(myCars$You.Save.Spend))
maxvals <-data.frame("MAXVAL",NA,max(myCars$Year),NA,NA,NA,NA,NA,NA,max(myCars$PassengerSpace[myCars$PassengerSpace!=0]),max(myCars$StorageSpace[myCars$StorageSpace!=0]),NA,max(myCars$Cylinders[myCars$Cylinders!=0], na.rm = TRUE),max(myCars$Engine.displacement[myCars$Engine.displacement!=0], na.rm = TRUE),NA,max(mpgs),NA,NA,max(myCars$EPA.Fuel.Economy.Score[myCars$EPA.Fuel.Economy.Score!=-1], na.rm = TRUE),max(myCars$GHGscore[myCars$GHGscore!=-1], na.rm = TRUE),max(myCars$You.Save.Spend))
names(minvals) <- names(myCars)
names(meanvals) <- names(myCars)
names(maxvals) <- names(myCars)
myCars <- rbind(myCars,minvals,meanvals,maxvals)
write.csv(myCars, file = "carsData.csv", row.names = FALSE, quote = FALSE)
tail(myCars, 3)
range(myCars$Year)
